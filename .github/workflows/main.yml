# WARNING: NEVER merge/inline workflows from other files into this one.
# Each workflow should be in its own file and called from here.
# This keeps the workflows modular and reusable.

name: CI

on:
  push:
    branches: [ "**" ]  # Run on all branches
  pull_request:  # Run on all PRs
  workflow_dispatch:  # Allow manual triggers for testing

permissions:
  contents: write  # Needed for creating releases

jobs:
  linux-build:
    name: "🐧 Build"
    uses: ./.github/workflows/build-linux.yml

  linux-test:
    name: "🐧 Test"
    needs: linux-build
    uses: ./.github/workflows/test-linux.yml

  macos-build:
    name: "🍎 Build"
    uses: ./.github/workflows/build-macos.yml

  macos-test:
    name: "🍎 Test"
    needs: macos-build
    uses: ./.github/workflows/test-macos.yml

  windows-build:
    name: "🪟 Build"
    uses: ./.github/workflows/build-windows.yml

  windows-test:
    name: "🪟 Test"
    needs: windows-build
    uses: ./.github/workflows/test-windows.yml

  check-changes:
    name: "🔍 Check Changes"
    needs: [linux-test, macos-test, windows-test]
    uses: ./.github/workflows/check-changes.yml

  # Run on non-main branches to show what would be released
  would_release:
    name: "📝 Would Release"
    needs: check-changes
    if: |
      needs.check-changes.outputs.has_changes == 'true' &&
      github.ref != 'refs/heads/main'
    uses: ./.github/workflows/would-release.yml
    with:
      release_notes: ${{ needs.check-changes.outputs.release_notes }}
      sha: ${{ github.sha }}

  # Run on main branch to create actual releases
  release:
    name: "🚀 Release"
    needs: check-changes
    if: |
      needs.check-changes.outputs.has_changes == 'true' &&
      github.ref == 'refs/heads/main'
    permissions:
      contents: write  # Explicitly pass write permission to release workflow
    uses: ./.github/workflows/release.yml
    with:
      release_notes: ${{ needs.check-changes.outputs.release_notes }}
      sha: ${{ github.sha }} 